; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30148.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0O@CIBCPLNG@CMakeMaterial@		; `string'
PUBLIC	??_C@_0CL@OFJHADBO@CMakeMaterial?5failed?5because?5na@ ; `string'
PUBLIC	??_C@_0DE@LFOBEEIG@CDestroyMaterial?5failed?5because@ ; `string'
PUBLIC	??_C@_0DH@FEKAHMEG@CDestroyMaterial?5failed?5because@ ; `string'
PUBLIC	??_C@_0BB@OMKLDMJI@CMakeRenderClass@		; `string'
PUBLIC	??_C@_0CP@LFFFKBOL@CMakerRenderClass?5failed?5becaus@ ; `string'
PUBLIC	??_C@_0CP@CHDAJNED@CMakerRenderClass?5failed?5becaus@ ; `string'
PUBLIC	??_C@_0BE@GAAOHGLP@CDestroyRenderClass@		; `string'
PUBLIC	??_C@_0DD@IOLBLGBA@CDestroyRenderClass?5failed?5beca@ ; `string'
PUBLIC	??_C@_0DG@OANPGKPE@CDestroyRenderClass?5failed?5beca@ ; `string'
PUBLIC	??_C@_0BE@NIBBBBPD@CRenderClassGetName@		; `string'
PUBLIC	??_C@_0DG@JAAINOED@CRenderClassGetName?5failed?5beca@ ; `string'
PUBLIC	??_C@_0BE@LDMFAMED@CRenderClassGetMesh@		; `string'
PUBLIC	??_C@_0DG@MPPLINNM@CRenderClassGetMesh?5failed?5beca@ ; `string'
PUBLIC	??_C@_0BI@NDFCLEDJ@CRenderClassSetMaterial@	; `string'
PUBLIC	??_C@_0DK@GDCJECCE@CRenderClassSetMaterial?5failed?5@ ; `string'
PUBLIC	??_C@_0DG@BKOJNOIH@CRenderClassSetMaterial?5failed?5@ ; `string'
PUBLIC	??_C@_0BI@NMEMGCLK@CRenderClassGetMaterial@	; `string'
PUBLIC	??_C@_0DK@NGCDIKBN@CRenderClassGetMaterial?5failed?5@ ; `string'
PUBLIC	??_C@_0DG@OAKKKOJC@CRenderClassGetMaterial?5failed?5@ ; `string'
PUBLIC	??_C@_0BK@FGMIKGEE@CRenderClassGetMaterialID@	; `string'
PUBLIC	??_C@_0DM@GBOGKMPH@CRenderClassGetMaterialID?5faile@ ; `string'
PUBLIC	??_C@_0DH@MCAOPKCI@CRenderClassGetMaterialID?5faile@ ; `string'
PUBLIC	??_C@_0EB@BPMNEBMB@CRenderClassGetMaterialID?5faile@ ; `string'
PUBLIC	??_C@_0CB@NJCGDCJJ@CRenderClassSetTriMaterialSingl@ ; `string'
PUBLIC	??_C@_0ED@FJLCFPFL@CRenderClassSetTriMaterialSingl@ ; `string'
PUBLIC	??_C@_0CB@IADLCEMO@CRenderClassGetTriMaterialSingl@ ; `string'
PUBLIC	??_C@_0ED@JMBEKINI@CRenderClassGetTriMaterialSingl@ ; `string'
PUBLIC	??_C@_0BM@EENIIEBE@CRenderClassSetTriMaterials@	; `string'
PUBLIC	??_C@_0DO@DJGCMBEA@CRenderClassSetTriMaterials?5fai@ ; `string'
PUBLIC	??_C@_0EH@PKBGPGHF@CRenderClassSetTriMaterials?5fai@ ; `string'
PUBLIC	??_C@_0BL@NLLLLNMG@CRenderClassGetTriMaterial@	; `string'
PUBLIC	??_C@_0DN@PHPMIKAF@CRenderClassGetTriMaterial?5fail@ ; `string'
PUBLIC	??_C@_0EH@MGLNFGP@CRenderClassGetTriMaterial?5fail@ ; `string'
PUBLIC	??_C@_0EL@BOICEKHA@CRenderClassGetTriMaterial?5fail@ ; `string'
PUBLIC	??_C@_0BN@MDCOFIAM@CRenderClassGetTriMaterialID@ ; `string'
PUBLIC	??_C@_0CA@FAKFBMPP@CRenderClassSetVertexDataBuffer@ ; `string'
PUBLIC	??_C@_0EC@KJBKKONJ@CRenderClassSetVertexDataBuffer@ ; `string'
PUBLIC	??_C@_0DO@JMHNBPGA@CRenderClassSetVertexDataBuffer@ ; `string'
PUBLIC	??_C@_0CA@POIOFMID@CRenderClassGetVertexDataBuffer@ ; `string'
PUBLIC	??_C@_0EC@LFNGJDGB@CRenderClassGetVertexDataBuffer@ ; `string'
PUBLIC	??_C@_0DO@MPAGMADK@CRenderClassGetVertexDataBuffer@ ; `string'
PUBLIC	??_C@_0CC@JJCNBEJH@CRenderClassGetVertexDataBuffer@ ; `string'
PUBLIC	??_C@_0EE@IGAHFBDI@CRenderClassGetVertexDataBuffer@ ; `string'
PUBLIC	??_C@_0DP@BKCMHNJM@CRenderClassGetVertexDataBuffer@ ; `string'
PUBLIC	??_C@_0EJ@LJJLCPAN@CRenderClassGetVertexDataBuffer@ ; `string'
PUBLIC	??_C@_0CA@FOGLFKED@CRenderClassSetStaticDataBuffer@ ; `string'
PUBLIC	??_C@_0EC@FPBADPMF@CRenderClassSetStaticDataBuffer@ ; `string'
PUBLIC	??_C@_0DO@NDKGGPLA@CRenderClassSetStaticDataBuffer@ ; `string'
PUBLIC	??_C@_0CA@PAEABKDP@CRenderClassGetStaticDataBuffer@ ; `string'
PUBLIC	??_C@_0EC@EDNMACHN@CRenderClassGetStaticDataBuffer@ ; `string'
PUBLIC	??_C@_0DO@IANNLAOK@CRenderClassGetStaticDataBuffer@ ; `string'
PUBLIC	??_C@_0CC@EOOCBPEI@CRenderClassGetStaticDataBuffer@ ; `string'
PUBLIC	??_C@_0EE@OHHIFJLN@CRenderClassGetStaticDataBuffer@ ; `string'
PUBLIC	??_C@_0DP@JMLAHEDI@CRenderClassGetStaticDataBuffer@ ; `string'
PUBLIC	??_C@_0EJ@CGGCENIL@CRenderClassGetStaticDataBuffer@ ; `string'
;	COMDAT ??_C@_0EJ@CGGCENIL@CRenderClassGetStaticDataBuffer@
CONST	SEGMENT
??_C@_0EJ@CGGCENIL@CRenderClassGetStaticDataBuffer@ DB 'CRenderClassGetSt'
	DB	'aticDataBufferID failed because name could not be found', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@JMLAHEDI@CRenderClassGetStaticDataBuffer@
CONST	SEGMENT
??_C@_0DP@JMLAHEDI@CRenderClassGetStaticDataBuffer@ DB 'CRenderClassGetSt'
	DB	'aticDataBufferID failed because name was NULL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@OHHIFJLN@CRenderClassGetStaticDataBuffer@
CONST	SEGMENT
??_C@_0EE@OHHIFJLN@CRenderClassGetStaticDataBuffer@ DB 'CRenderClassGetSt'
	DB	'aticDataBufferID failed because rClass was invalid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@EOOCBPEI@CRenderClassGetStaticDataBuffer@
CONST	SEGMENT
??_C@_0CC@EOOCBPEI@CRenderClassGetStaticDataBuffer@ DB 'CRenderClassGetSt'
	DB	'aticDataBufferID', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@IANNLAOK@CRenderClassGetStaticDataBuffer@
CONST	SEGMENT
??_C@_0DO@IANNLAOK@CRenderClassGetStaticDataBuffer@ DB 'CRenderClassGetSt'
	DB	'aticDataBuffer failed because ID was invalid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@EDNMACHN@CRenderClassGetStaticDataBuffer@
CONST	SEGMENT
??_C@_0EC@EDNMACHN@CRenderClassGetStaticDataBuffer@ DB 'CRenderClassGetSt'
	DB	'aticDataBuffer failed because rClass was invalid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@PAEABKDP@CRenderClassGetStaticDataBuffer@
CONST	SEGMENT
??_C@_0CA@PAEABKDP@CRenderClassGetStaticDataBuffer@ DB 'CRenderClassGetSt'
	DB	'aticDataBuffer', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@NDKGGPLA@CRenderClassSetStaticDataBuffer@
CONST	SEGMENT
??_C@_0DO@NDKGGPLA@CRenderClassSetStaticDataBuffer@ DB 'CRenderClassSetSt'
	DB	'aticDataBuffer failed because ID was invalid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@FPBADPMF@CRenderClassSetStaticDataBuffer@
CONST	SEGMENT
??_C@_0EC@FPBADPMF@CRenderClassSetStaticDataBuffer@ DB 'CRenderClassSetSt'
	DB	'aticDataBuffer failed because rClass was invalid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@FOGLFKED@CRenderClassSetStaticDataBuffer@
CONST	SEGMENT
??_C@_0CA@FOGLFKED@CRenderClassSetStaticDataBuffer@ DB 'CRenderClassSetSt'
	DB	'aticDataBuffer', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@LJJLCPAN@CRenderClassGetVertexDataBuffer@
CONST	SEGMENT
??_C@_0EJ@LJJLCPAN@CRenderClassGetVertexDataBuffer@ DB 'CRenderClassGetVe'
	DB	'rtexDataBufferID failed because name could not be found', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@BKCMHNJM@CRenderClassGetVertexDataBuffer@
CONST	SEGMENT
??_C@_0DP@BKCMHNJM@CRenderClassGetVertexDataBuffer@ DB 'CRenderClassGetVe'
	DB	'rtexDataBufferID failed because name was NULL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@IGAHFBDI@CRenderClassGetVertexDataBuffer@
CONST	SEGMENT
??_C@_0EE@IGAHFBDI@CRenderClassGetVertexDataBuffer@ DB 'CRenderClassGetVe'
	DB	'rtexDataBufferID failed because rClass was invalid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@JJCNBEJH@CRenderClassGetVertexDataBuffer@
CONST	SEGMENT
??_C@_0CC@JJCNBEJH@CRenderClassGetVertexDataBuffer@ DB 'CRenderClassGetVe'
	DB	'rtexDataBufferID', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@MPAGMADK@CRenderClassGetVertexDataBuffer@
CONST	SEGMENT
??_C@_0DO@MPAGMADK@CRenderClassGetVertexDataBuffer@ DB 'CRenderClassGetVe'
	DB	'rtexDataBuffer failed because ID was invalid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@LFNGJDGB@CRenderClassGetVertexDataBuffer@
CONST	SEGMENT
??_C@_0EC@LFNGJDGB@CRenderClassGetVertexDataBuffer@ DB 'CRenderClassGetVe'
	DB	'rtexDataBuffer failed because rClass was invalid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@POIOFMID@CRenderClassGetVertexDataBuffer@
CONST	SEGMENT
??_C@_0CA@POIOFMID@CRenderClassGetVertexDataBuffer@ DB 'CRenderClassGetVe'
	DB	'rtexDataBuffer', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@JMHNBPGA@CRenderClassSetVertexDataBuffer@
CONST	SEGMENT
??_C@_0DO@JMHNBPGA@CRenderClassSetVertexDataBuffer@ DB 'CRenderClassSetVe'
	DB	'rtexDataBuffer failed because ID was invalid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@KJBKKONJ@CRenderClassSetVertexDataBuffer@
CONST	SEGMENT
??_C@_0EC@KJBKKONJ@CRenderClassSetVertexDataBuffer@ DB 'CRenderClassSetVe'
	DB	'rtexDataBuffer failed because rClass was invalid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@FAKFBMPP@CRenderClassSetVertexDataBuffer@
CONST	SEGMENT
??_C@_0CA@FAKFBMPP@CRenderClassSetVertexDataBuffer@ DB 'CRenderClassSetVe'
	DB	'rtexDataBuffer', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@MDCOFIAM@CRenderClassGetTriMaterialID@
CONST	SEGMENT
??_C@_0BN@MDCOFIAM@CRenderClassGetTriMaterialID@ DB 'CRenderClassGetTriMa'
	DB	'terialID', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@BOICEKHA@CRenderClassGetTriMaterial?5fail@
CONST	SEGMENT
??_C@_0EL@BOICEKHA@CRenderClassGetTriMaterial?5fail@ DB 'CRenderClassGetT'
	DB	'riMaterial failed because class triMaterials had bad value', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@MGLNFGP@CRenderClassGetTriMaterial?5fail@
CONST	SEGMENT
??_C@_0EH@MGLNFGP@CRenderClassGetTriMaterial?5fail@ DB 'CRenderClassGetTr'
	DB	'iMaterial failed because triMaterialIndex was invalid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@PHPMIKAF@CRenderClassGetTriMaterial?5fail@
CONST	SEGMENT
??_C@_0DN@PHPMIKAF@CRenderClassGetTriMaterial?5fail@ DB 'CRenderClassGetT'
	DB	'riMaterial failed because rClass was invalid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NLLLLNMG@CRenderClassGetTriMaterial@
CONST	SEGMENT
??_C@_0BL@NLLLLNMG@CRenderClassGetTriMaterial@ DB 'CRenderClassGetTriMate'
	DB	'rial', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@PKBGPGHF@CRenderClassSetTriMaterials?5fai@
CONST	SEGMENT
??_C@_0EH@PKBGPGHF@CRenderClassSetTriMaterials?5fai@ DB 'CRenderClassSetT'
	DB	'riMaterials failed because triMaterialIndexes was NULL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@DJGCMBEA@CRenderClassSetTriMaterials?5fai@
CONST	SEGMENT
??_C@_0DO@DJGCMBEA@CRenderClassSetTriMaterials?5fai@ DB 'CRenderClassSetT'
	DB	'riMaterials failed because rClass was invalid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@EENIIEBE@CRenderClassSetTriMaterials@
CONST	SEGMENT
??_C@_0BM@EENIIEBE@CRenderClassSetTriMaterials@ DB 'CRenderClassSetTriMat'
	DB	'erials', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@JMBEKINI@CRenderClassGetTriMaterialSingl@
CONST	SEGMENT
??_C@_0ED@JMBEKINI@CRenderClassGetTriMaterialSingl@ DB 'CRenderClassGetTr'
	DB	'iMaterialSingle failed because rClass was invalid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@IADLCEMO@CRenderClassGetTriMaterialSingl@
CONST	SEGMENT
??_C@_0CB@IADLCEMO@CRenderClassGetTriMaterialSingl@ DB 'CRenderClassGetTr'
	DB	'iMaterialSingle', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@FJLCFPFL@CRenderClassSetTriMaterialSingl@
CONST	SEGMENT
??_C@_0ED@FJLCFPFL@CRenderClassSetTriMaterialSingl@ DB 'CRenderClassSetTr'
	DB	'iMaterialSingle failed because rClass was invalid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@NJCGDCJJ@CRenderClassSetTriMaterialSingl@
CONST	SEGMENT
??_C@_0CB@NJCGDCJJ@CRenderClassSetTriMaterialSingl@ DB 'CRenderClassSetTr'
	DB	'iMaterialSingle', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@BPMNEBMB@CRenderClassGetMaterialID?5faile@
CONST	SEGMENT
??_C@_0EB@BPMNEBMB@CRenderClassGetMaterialID?5faile@ DB 'CRenderClassGetM'
	DB	'aterialID failed because name could not be found', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@MCAOPKCI@CRenderClassGetMaterialID?5faile@
CONST	SEGMENT
??_C@_0DH@MCAOPKCI@CRenderClassGetMaterialID?5faile@ DB 'CRenderClassGetM'
	DB	'aterialID failed because name was NULL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@GBOGKMPH@CRenderClassGetMaterialID?5faile@
CONST	SEGMENT
??_C@_0DM@GBOGKMPH@CRenderClassGetMaterialID?5faile@ DB 'CRenderClassGetM'
	DB	'aterialID failed because rClass was invalid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FGMIKGEE@CRenderClassGetMaterialID@
CONST	SEGMENT
??_C@_0BK@FGMIKGEE@CRenderClassGetMaterialID@ DB 'CRenderClassGetMaterial'
	DB	'ID', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@OAKKKOJC@CRenderClassGetMaterial?5failed?5@
CONST	SEGMENT
??_C@_0DG@OAKKKOJC@CRenderClassGetMaterial?5failed?5@ DB 'CRenderClassGet'
	DB	'Material failed because ID was invalid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@NGCDIKBN@CRenderClassGetMaterial?5failed?5@
CONST	SEGMENT
??_C@_0DK@NGCDIKBN@CRenderClassGetMaterial?5failed?5@ DB 'CRenderClassGet'
	DB	'Material failed because rClass was invalid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NMEMGCLK@CRenderClassGetMaterial@
CONST	SEGMENT
??_C@_0BI@NMEMGCLK@CRenderClassGetMaterial@ DB 'CRenderClassGetMaterial', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@BKOJNOIH@CRenderClassSetMaterial?5failed?5@
CONST	SEGMENT
??_C@_0DG@BKOJNOIH@CRenderClassSetMaterial?5failed?5@ DB 'CRenderClassSet'
	DB	'Material failed because ID was invalid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@GDCJECCE@CRenderClassSetMaterial?5failed?5@
CONST	SEGMENT
??_C@_0DK@GDCJECCE@CRenderClassSetMaterial?5failed?5@ DB 'CRenderClassSet'
	DB	'Material failed because rClass was invalid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NDFCLEDJ@CRenderClassSetMaterial@
CONST	SEGMENT
??_C@_0BI@NDFCLEDJ@CRenderClassSetMaterial@ DB 'CRenderClassSetMaterial', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@MPPLINNM@CRenderClassGetMesh?5failed?5beca@
CONST	SEGMENT
??_C@_0DG@MPPLINNM@CRenderClassGetMesh?5failed?5beca@ DB 'CRenderClassGet'
	DB	'Mesh failed because rClass was invalid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LDMFAMED@CRenderClassGetMesh@
CONST	SEGMENT
??_C@_0BE@LDMFAMED@CRenderClassGetMesh@ DB 'CRenderClassGetMesh', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@JAAINOED@CRenderClassGetName?5failed?5beca@
CONST	SEGMENT
??_C@_0DG@JAAINOED@CRenderClassGetName?5failed?5beca@ DB 'CRenderClassGet'
	DB	'Name failed because rClass was invalid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NIBBBBPD@CRenderClassGetName@
CONST	SEGMENT
??_C@_0BE@NIBBBBPD@CRenderClassGetName@ DB 'CRenderClassGetName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@OANPGKPE@CDestroyRenderClass?5failed?5beca@
CONST	SEGMENT
??_C@_0DG@OANPGKPE@CDestroyRenderClass?5failed?5beca@ DB 'CDestroyRenderC'
	DB	'lass failed because pClass was invalid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@IOLBLGBA@CDestroyRenderClass?5failed?5beca@
CONST	SEGMENT
??_C@_0DD@IOLBLGBA@CDestroyRenderClass?5failed?5beca@ DB 'CDestroyRenderC'
	DB	'lass failed because pClass was NULL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GAAOHGLP@CDestroyRenderClass@
CONST	SEGMENT
??_C@_0BE@GAAOHGLP@CDestroyRenderClass@ DB 'CDestroyRenderClass', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@CHDAJNED@CMakerRenderClass?5failed?5becaus@
CONST	SEGMENT
??_C@_0CP@CHDAJNED@CMakerRenderClass?5failed?5becaus@ DB 'CMakerRenderCla'
	DB	'ss failed because mesh was NULL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@LFFFKBOL@CMakerRenderClass?5failed?5becaus@
CONST	SEGMENT
??_C@_0CP@LFFFKBOL@CMakerRenderClass?5failed?5becaus@ DB 'CMakerRenderCla'
	DB	'ss failed because name was NULL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OMKLDMJI@CMakeRenderClass@
CONST	SEGMENT
??_C@_0BB@OMKLDMJI@CMakeRenderClass@ DB 'CMakeRenderClass', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@FEKAHMEG@CDestroyMaterial?5failed?5because@
CONST	SEGMENT
??_C@_0DH@FEKAHMEG@CDestroyMaterial?5failed?5because@ DB 'CDestroyMateria'
	DB	'l failed because pMatHandle was invalid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@LFOBEEIG@CDestroyMaterial?5failed?5because@
CONST	SEGMENT
??_C@_0DE@LFOBEEIG@CDestroyMaterial?5failed?5because@ DB 'CDestroyMateria'
	DB	'l failed because pMatHandle was NULL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@OFJHADBO@CMakeMaterial?5failed?5because?5na@
CONST	SEGMENT
??_C@_0CL@OFJHADBO@CMakeMaterial?5failed?5because?5na@ DB 'CMakeMaterial '
	DB	'failed because name was NULL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CIBCPLNG@CMakeMaterial@
CONST	SEGMENT
??_C@_0O@CIBCPLNG@CMakeMaterial@ DB 'CMakeMaterial', 00H ; `string'
PUBLIC	CRenderClassGetStaticDataBufferID
PUBLIC	CRenderClassSetStaticDataBuffer
PUBLIC	CRenderClassGetVertexDataBufferID
PUBLIC	CRenderClassGetVertexDataBuffer
PUBLIC	CRenderClassSetVertexDataBuffer
PUBLIC	CRenderClassGetTriMaterialID
PUBLIC	CRenderClassGetTriMaterial
PUBLIC	CRenderClassSetTriMaterials
PUBLIC	CRenderClassGetTriMaterialSingle
PUBLIC	CRenderClassSetTriMaterialSingle
PUBLIC	CRenderClassGetMaterialID
PUBLIC	CRenderClassGetMaterial
PUBLIC	CRenderClassSetMaterial
PUBLIC	CRenderClassGetName
PUBLIC	CDestroyRenderClass
PUBLIC	CMakeRenderClass
PUBLIC	CDestroyMaterial
PUBLIC	CMakeMaterial
PUBLIC	CRenderClassGetMesh
PUBLIC	CRenderClassGetStaticDataBuffer
;	COMDAT pdata
pdata	SEGMENT
$pdata$CRenderClassGetStaticDataBufferID DD imagerel $LN45
	DD	imagerel $LN45+329
	DD	imagerel $unwind$CRenderClassGetStaticDataBufferID
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$CRenderClassGetStaticDataBufferID DD imagerel $LN45+329
	DD	imagerel $LN45+513
	DD	imagerel $chain$0$CRenderClassGetStaticDataBufferID
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$CRenderClassGetStaticDataBufferID DD imagerel $LN45+513
	DD	imagerel $LN45+594
	DD	imagerel $chain$2$CRenderClassGetStaticDataBufferID
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$CRenderClassSetStaticDataBuffer DD imagerel $LN26
	DD	imagerel $LN26+418
	DD	imagerel $unwind$CRenderClassSetStaticDataBuffer
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$CRenderClassGetVertexDataBufferID DD imagerel $LN45
	DD	imagerel $LN45+329
	DD	imagerel $unwind$CRenderClassGetVertexDataBufferID
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$CRenderClassGetVertexDataBufferID DD imagerel $LN45+329
	DD	imagerel $LN45+513
	DD	imagerel $chain$0$CRenderClassGetVertexDataBufferID
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$CRenderClassGetVertexDataBufferID DD imagerel $LN45+513
	DD	imagerel $LN45+594
	DD	imagerel $chain$2$CRenderClassGetVertexDataBufferID
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$CRenderClassGetVertexDataBuffer DD imagerel $LN26
	DD	imagerel $LN26+421
	DD	imagerel $unwind$CRenderClassGetVertexDataBuffer
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$CRenderClassSetVertexDataBuffer DD imagerel $LN26
	DD	imagerel $LN26+415
	DD	imagerel $unwind$CRenderClassSetVertexDataBuffer
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$CRenderClassGetTriMaterialID DD imagerel $LN26
	DD	imagerel $LN26+434
	DD	imagerel $unwind$CRenderClassGetTriMaterialID
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$CRenderClassGetTriMaterial DD imagerel $LN32
	DD	imagerel $LN32+548
	DD	imagerel $unwind$CRenderClassGetTriMaterial
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$CRenderClassSetTriMaterials DD imagerel $LN26
	DD	imagerel $LN26+442
	DD	imagerel $unwind$CRenderClassSetTriMaterials
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$CRenderClassGetTriMaterialSingle DD imagerel $LN20
	DD	imagerel $LN20+320
	DD	imagerel $unwind$CRenderClassGetTriMaterialSingle
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$CRenderClassSetTriMaterialSingle DD imagerel $LN20
	DD	imagerel $LN20+317
	DD	imagerel $unwind$CRenderClassSetTriMaterialSingle
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$CRenderClassGetMaterialID DD imagerel $LN45
	DD	imagerel $LN45+335
	DD	imagerel $unwind$CRenderClassGetMaterialID
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$CRenderClassGetMaterialID DD imagerel $LN45+335
	DD	imagerel $LN45+517
	DD	imagerel $chain$0$CRenderClassGetMaterialID
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$CRenderClassGetMaterialID DD imagerel $LN45+517
	DD	imagerel $LN45+598
	DD	imagerel $chain$2$CRenderClassGetMaterialID
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$CRenderClassGetMaterial DD imagerel $LN26
	DD	imagerel $LN26+424
	DD	imagerel $unwind$CRenderClassGetMaterial
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$CRenderClassSetMaterial DD imagerel $LN26
	DD	imagerel $LN26+418
	DD	imagerel $unwind$CRenderClassSetMaterial
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$CRenderClassGetName DD imagerel $LN24
	DD	imagerel $LN24+360
	DD	imagerel $unwind$CRenderClassGetName
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$CDestroyRenderClass DD imagerel $LN26
	DD	imagerel $LN26+447
	DD	imagerel $unwind$CDestroyRenderClass
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$CMakeRenderClass DD imagerel $LN29
	DD	imagerel $LN29+326
	DD	imagerel $unwind$CMakeRenderClass
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$CMakeRenderClass DD imagerel $LN29+326
	DD	imagerel $LN29+461
	DD	imagerel $chain$2$CMakeRenderClass
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$CMakeRenderClass DD imagerel $LN29+461
	DD	imagerel $LN29+546
	DD	imagerel $chain$3$CMakeRenderClass
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$CDestroyMaterial DD imagerel $LN21
	DD	imagerel $LN21+351
	DD	imagerel $unwind$CDestroyMaterial
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$CMakeMaterial DD imagerel $LN23
	DD	imagerel $LN23+217
	DD	imagerel $unwind$CMakeMaterial
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$CMakeMaterial DD imagerel $LN23+217
	DD	imagerel $LN23+316
	DD	imagerel $chain$2$CMakeMaterial
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$CMakeMaterial DD imagerel $LN23+316
	DD	imagerel $LN23+401
	DD	imagerel $chain$3$CMakeMaterial
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_initializeAndCopyString DD imagerel _initializeAndCopyString
	DD	imagerel _initializeAndCopyString+77
	DD	imagerel $unwind$_initializeAndCopyString
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$CRenderClassGetMesh DD imagerel $LN20
	DD	imagerel $LN20+293
	DD	imagerel $unwind$CRenderClassGetMesh
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$CRenderClassGetStaticDataBuffer DD imagerel $LN26
	DD	imagerel $LN26+424
	DD	imagerel $unwind$CRenderClassGetStaticDataBuffer
;	COMDAT xdata
xdata	SEGMENT
$unwind$CRenderClassGetStaticDataBuffer DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$CRenderClassGetMesh DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_initializeAndCopyString DQ 00007640f00060f01r ; 1.02782e-308
	DQ	0700b320f0006340fr		; 5.2777e+231
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$CMakeMaterial DD 020021H
	DD	0ae400H
	DD	imagerel $LN23
	DD	imagerel $LN23+217
	DD	imagerel $unwind$CMakeMaterial
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$CMakeMaterial DD 061421H
	DD	0ae414H
	DD	09740fH
	DD	083405H
	DD	imagerel $LN23
	DD	imagerel $LN23+217
	DD	imagerel $unwind$CMakeMaterial
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$CMakeMaterial DD 060e01H
	DD	0b540eH
	DD	0f00a320eH
	DD	06006c008H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$CDestroyMaterial DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$CMakeRenderClass DD 020021H
	DD	0ae400H
	DD	imagerel $LN29
	DD	imagerel $LN29+326
	DD	imagerel $unwind$CMakeRenderClass
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$CMakeRenderClass DD 061421H
	DD	0ae414H
	DD	09740fH
	DD	083405H
	DD	imagerel $LN29
	DD	imagerel $LN29+326
	DD	imagerel $unwind$CMakeRenderClass
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$CMakeRenderClass DD 060e01H
	DD	0b540eH
	DD	0f00a320eH
	DD	06006c008H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$CDestroyRenderClass DD 064501H
	DD	063445H
	DD	07640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$CRenderClassGetName DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$CRenderClassSetMaterial DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$CRenderClassGetMaterial DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$CRenderClassGetMaterialID DD 020021H
	DD	063400H
	DD	imagerel $LN45
	DD	imagerel $LN45+335
	DD	imagerel $unwind$CRenderClassGetMaterialID
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$CRenderClassGetMaterialID DD 020521H
	DD	063405H
	DD	imagerel $LN45
	DD	imagerel $LN45+335
	DD	imagerel $unwind$CRenderClassGetMaterialID
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$CRenderClassGetMaterialID DD 061001H
	DD	087410H
	DD	075410H
	DD	0e00c3210H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$CRenderClassSetTriMaterialSingle DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$CRenderClassGetTriMaterialSingle DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$CRenderClassSetTriMaterials DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$CRenderClassGetTriMaterial DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$CRenderClassGetTriMaterialID DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$CRenderClassSetVertexDataBuffer DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$CRenderClassGetVertexDataBuffer DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$CRenderClassGetVertexDataBufferID DD 020021H
	DD	063400H
	DD	imagerel $LN45
	DD	imagerel $LN45+329
	DD	imagerel $unwind$CRenderClassGetVertexDataBufferID
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$CRenderClassGetVertexDataBufferID DD 020521H
	DD	063405H
	DD	imagerel $LN45
	DD	imagerel $LN45+329
	DD	imagerel $unwind$CRenderClassGetVertexDataBufferID
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$CRenderClassGetVertexDataBufferID DD 061001H
	DD	087410H
	DD	075410H
	DD	0e00c3210H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$CRenderClassSetStaticDataBuffer DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$CRenderClassGetStaticDataBufferID DD 020021H
	DD	063400H
	DD	imagerel $LN45
	DD	imagerel $LN45+329
	DD	imagerel $unwind$CRenderClassGetStaticDataBufferID
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$CRenderClassGetStaticDataBufferID DD 020521H
	DD	063405H
	DD	imagerel $LN45
	DD	imagerel $LN45+329
	DD	imagerel $unwind$CRenderClassGetStaticDataBufferID
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$CRenderClassGetStaticDataBufferID DD 061001H
	DD	087410H
	DD	075410H
	DD	0e00c3210H
; Function compile flags: /Ogtpy
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
;	COMDAT CRenderClassGetStaticDataBuffer
_TEXT	SEGMENT
rClass$ = 48
ID$ = 56
CRenderClassGetStaticDataBuffer PROC			; COMDAT

; 381  : CSMCALL CHandle CRenderClassGetStaticDataBuffer(CHandle rClass, UINT32 ID) {

$LN26:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 381  : CSMCALL CHandle CRenderClassGetStaticDataBuffer(CHandle rClass, UINT32 ID) {

	mov	rdi, rcx
	mov	ebx, edx
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	cmp	eax, 128				; 00000080H
	jb	SHORT $LN8@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN8@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 12   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = funcname;

	lea	rcx, OFFSET FLAT:??_C@_0CA@PAEABKDP@CRenderClassGetStaticDataBuffer@
	lea	rsi, OFFSET FLAT:_csmint
	mov	QWORD PTR [rsi+rax*8+200], rcx
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 382  : 	_CSyncEnter();

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 13   : 	_csmint.funcNameStackPtr++;

	inc	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 382  : 	_CSyncEnter();

	call	QWORD PTR __imp_EnterCriticalSection

; 383  : 
; 384  : 	if (rClass == NULL) {

	test	rdi, rdi
	jne	SHORT $LN2@CRenderCla

; 385  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:??_C@_0EC@EDNMACHN@CRenderClassGetStaticDataBuffer@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN13@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN13@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rsi+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 385  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 385  : 		_CSyncLeaveErr(FALSE,

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax

; 397  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@CRenderCla:

; 386  : 			"CRenderClassGetStaticDataBuffer failed because rClass was invalid");
; 387  : 	}
; 388  : 
; 389  : 	if (ID >= CSM_CLASS_MAX_STATIC_DATA) {

	cmp	ebx, 32					; 00000020H
	jb	SHORT $LN3@CRenderCla

; 390  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:??_C@_0DO@IANNLAOK@CRenderClassGetStaticDataBuffer@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN18@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN18@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rsi+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 390  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 390  : 		_CSyncLeaveErr(FALSE,

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax

; 397  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN3@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN23@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN23@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rsi+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 396  : 	_CSyncLeave(cObj->staticBuffers[ID]);

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 396  : 	_CSyncLeave(cObj->staticBuffers[ID]);

	call	QWORD PTR __imp_LeaveCriticalSection
	mov	rax, QWORD PTR [rdi+rbx*8+144]

; 397  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
CRenderClassGetStaticDataBuffer ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
;	COMDAT CRenderClassGetMesh
_TEXT	SEGMENT
rClass$ = 48
CRenderClassGetMesh PROC				; COMDAT

; 124  : CSMCALL CHandle CRenderClassGetMesh(CHandle rClass) {

$LN20:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 124  : CSMCALL CHandle CRenderClassGetMesh(CHandle rClass) {

	mov	rbx, rcx
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	cmp	eax, 128				; 00000080H
	jb	SHORT $LN7@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN7@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 12   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = funcname;

	lea	rcx, OFFSET FLAT:??_C@_0BE@LDMFAMED@CRenderClassGetMesh@
	lea	rdi, OFFSET FLAT:_csmint
	mov	QWORD PTR [rdi+rax*8+200], rcx
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 125  : 	_CSyncEnter();

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 13   : 	_csmint.funcNameStackPtr++;

	inc	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 125  : 	_CSyncEnter();

	call	QWORD PTR __imp_EnterCriticalSection

; 126  : 
; 127  : 	if (rClass == NULL) {

	test	rbx, rbx
	jne	SHORT $LN2@CRenderCla

; 128  : 		_CSyncLeaveErr(NULL, "CRenderClassGetMesh failed because rClass was invalid");

	lea	rcx, OFFSET FLAT:??_C@_0DG@MPPLINNM@CRenderClassGetMesh?5failed?5beca@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN12@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN12@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rdi+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 128  : 		_CSyncLeaveErr(NULL, "CRenderClassGetMesh failed because rClass was invalid");

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 128  : 		_CSyncLeaveErr(NULL, "CRenderClassGetMesh failed because rClass was invalid");

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax

; 133  : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN17@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN17@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rdi+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 132  : 	_CSyncLeave(cObj->mesh);

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 132  : 	_CSyncLeave(cObj->mesh);

	call	QWORD PTR __imp_LeaveCriticalSection
	mov	rax, QWORD PTR [rbx+8]

; 133  : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
CRenderClassGetMesh ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
;	COMDAT CMakeMaterial
_TEXT	SEGMENT
name$ = 64
vertexShader$ = 72
fragmentShader$ = 80
CMakeMaterial PROC					; COMDAT

; 17   : 	PCFFragmentShaderProc fragmentShader) {

$LN23:
	mov	QWORD PTR [rsp+32], rbp
	push	rsi
	push	r12
	push	r15
	sub	rsp, 32					; 00000020H
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 17   : 	PCFFragmentShaderProc fragmentShader) {

	mov	rbp, r8
	mov	r15, rdx
	mov	rsi, rcx
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	cmp	eax, 128				; 00000080H
	jb	SHORT $LN7@CMakeMater
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN7@CMakeMater:
; File C:\Bailey\Programming\Caesium\csmint.c

; 12   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = funcname;

	lea	rcx, OFFSET FLAT:??_C@_0O@CIBCPLNG@CMakeMaterial@
	lea	r12, OFFSET FLAT:_csmint
	mov	QWORD PTR [r12+rax*8+200], rcx
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 18   : 	_CSyncEnter();

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 13   : 	_csmint.funcNameStackPtr++;

	inc	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 18   : 	_CSyncEnter();

	call	QWORD PTR __imp_EnterCriticalSection

; 19   : 
; 20   : 	if (name == NULL) {

	test	rsi, rsi
	jne	SHORT $LN2@CMakeMater

; 21   : 		_CSyncLeaveErr(NULL, "CMakeMaterial failed because name was NULL");

	lea	rcx, OFFSET FLAT:??_C@_0CL@OFJHADBO@CMakeMaterial?5failed?5because?5na@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN12@CMakeMater
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN12@CMakeMater:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [r12+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 21   : 		_CSyncLeaveErr(NULL, "CMakeMaterial failed because name was NULL");

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 21   : 		_CSyncLeaveErr(NULL, "CMakeMaterial failed because name was NULL");

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax

; 31   : }

	mov	rbp, QWORD PTR [rsp+88]
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r12
	pop	rsi
	ret	0
$LN2@CMakeMater:
	mov	QWORD PTR [rsp+64], rbx

; 22   : 	}
; 23   : 
; 24   : 	PCMaterial mat = CInternalAlloc(sizeof(CMaterial));

	mov	ecx, 24
	mov	QWORD PTR [rsp+72], rdi
	mov	QWORD PTR [rsp+80], r14
	call	CInternalAlloc
	mov	r14, rax

; 10   : 	const SIZE_T srcLen = strlen(source);

	mov	rbx, -1
	npad	4
$LL21@CMakeMater:
	inc	rbx
	cmp	BYTE PTR [rsi+rbx], 0
	jne	SHORT $LL21@CMakeMater

; 11   : 	*destPtr = CInternalAlloc(srcLen + 1); //+1 for NULL terminator

	lea	rcx, QWORD PTR [rbx+1]
	call	CInternalAlloc
	mov	QWORD PTR [r14], rax

; 12   : 	COPY_BYTES(source, *destPtr, srcLen);

	mov	rdi, rax
	mov	rcx, rbx
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	rbx, QWORD PTR [rsp+64]
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 12   : 	COPY_BYTES(source, *destPtr, srcLen);

	rep movsb
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	rdi, QWORD PTR [rsp+72]
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 27   : 	mat->vertexShader = vertexShader;

	mov	QWORD PTR [r14+8], r15

; 28   : 	mat->fragmentShader = fragmentShader;

	mov	QWORD PTR [r14+16], rbp
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN19@CMakeMater
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN19@CMakeMater:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [r12+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 30   : 	_CSyncLeave(mat);

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 30   : 	_CSyncLeave(mat);

	call	QWORD PTR __imp_LeaveCriticalSection

; 31   : }

	mov	rbp, QWORD PTR [rsp+88]
	mov	rax, r14
	mov	r14, QWORD PTR [rsp+80]
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r12
	pop	rsi
	ret	0
CMakeMaterial ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
;	COMDAT CDestroyMaterial
_TEXT	SEGMENT
pMatHandle$ = 48
CDestroyMaterial PROC					; COMDAT

; 33   : CSMCALL BOOL	CDestroyMaterial(PCHandle pMatHandle) {

$LN21:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 34   : 	if (pMatHandle == NULL) {

	test	rcx, rcx
	jne	SHORT $LN2@CDestroyMa

; 35   : 		_CSyncLeaveErr(FALSE, "CDestroyMaterial failed because pMatHandle was NULL");

	lea	rcx, OFFSET FLAT:??_C@_0DE@LFOBEEIG@CDestroyMaterial?5failed?5because@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN8@CDestroyMa
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN8@CDestroyMa:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	lea	rcx, OFFSET FLAT:_csmint
	xor	edi, edi
	mov	QWORD PTR [rcx+rax*8+200], rdi
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 35   : 		_CSyncLeaveErr(FALSE, "CDestroyMaterial failed because pMatHandle was NULL");

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 35   : 		_CSyncLeaveErr(FALSE, "CDestroyMaterial failed because pMatHandle was NULL");

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax

; 48   : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@CDestroyMa:

; 36   : 	}
; 37   : 
; 38   : 	PCMaterial mat = *pMatHandle;

	mov	rdi, QWORD PTR [rcx]

; 39   : 	if (mat == NULL) {

	test	rdi, rdi
	jne	SHORT $LN3@CDestroyMa

; 40   : 		_CSyncLeaveErr(FALSE, "CDestroyMaterial failed because pMatHandle was invalid");

	lea	rcx, OFFSET FLAT:??_C@_0DH@FEKAHMEG@CDestroyMaterial?5failed?5because@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN13@CDestroyMa
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN13@CDestroyMa:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	lea	rcx, OFFSET FLAT:_csmint
	xor	edi, edi
	mov	QWORD PTR [rcx+rax*8+200], rdi
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 40   : 		_CSyncLeaveErr(FALSE, "CDestroyMaterial failed because pMatHandle was invalid");

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 40   : 		_CSyncLeaveErr(FALSE, "CDestroyMaterial failed because pMatHandle was invalid");

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax

; 48   : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN3@CDestroyMa:

; 41   : 	}
; 42   : 
; 43   : 	CInternalFree(mat->name);

	mov	rcx, QWORD PTR [rdi]
	call	CInternalFree

; 44   : 	CInternalFree(mat);

	mov	rcx, rdi
	call	CInternalFree

; 45   : 	*pMatHandle = NULL;

	xor	edi, edi
	mov	QWORD PTR [rbx], rdi
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN18@CDestroyMa
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN18@CDestroyMa:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	lea	rcx, OFFSET FLAT:_csmint
	mov	QWORD PTR [rcx+rax*8+200], rdi
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 47   : 	_CSyncLeave(TRUE);

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 47   : 	_CSyncLeave(TRUE);

	call	QWORD PTR __imp_LeaveCriticalSection

; 48   : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	eax, 1
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
CDestroyMaterial ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
;	COMDAT CMakeRenderClass
_TEXT	SEGMENT
name$ = 64
mesh$ = 72
material$ = 80
CMakeRenderClass PROC					; COMDAT

; 50   : CSMCALL CHandle CMakeRenderClass(PCHAR name, CHandle mesh, CHandle material) {

$LN29:
	mov	QWORD PTR [rsp+32], rbp
	push	rsi
	push	r12
	push	r15
	sub	rsp, 32					; 00000020H
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 50   : CSMCALL CHandle CMakeRenderClass(PCHAR name, CHandle mesh, CHandle material) {

	mov	r15, r8
	mov	rbp, rdx
	mov	rsi, rcx
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	cmp	eax, 128				; 00000080H
	jb	SHORT $LN8@CMakeRende
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN8@CMakeRende:
; File C:\Bailey\Programming\Caesium\csmint.c

; 12   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = funcname;

	lea	rcx, OFFSET FLAT:??_C@_0BB@OMKLDMJI@CMakeRenderClass@
	lea	r12, OFFSET FLAT:_csmint
	mov	QWORD PTR [r12+rax*8+200], rcx
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 51   : 	_CSyncEnter();

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 13   : 	_csmint.funcNameStackPtr++;

	inc	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 51   : 	_CSyncEnter();

	call	QWORD PTR __imp_EnterCriticalSection

; 52   : 
; 53   : 	if (name == NULL) {

	test	rsi, rsi
	jne	SHORT $LN2@CMakeRende

; 54   : 		_CSyncLeaveErr(NULL, "CMakerRenderClass failed because name was NULL");

	lea	rcx, OFFSET FLAT:??_C@_0CP@LFFFKBOL@CMakerRenderClass?5failed?5becaus@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN13@CMakeRende
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN13@CMakeRende:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [r12+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 54   : 		_CSyncLeaveErr(NULL, "CMakerRenderClass failed because name was NULL");

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 54   : 		_CSyncLeaveErr(NULL, "CMakerRenderClass failed because name was NULL");

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax

; 80   : }

	mov	rbp, QWORD PTR [rsp+88]
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r12
	pop	rsi
	ret	0
$LN2@CMakeRende:

; 55   : 	}
; 56   : 
; 57   : 	if (mesh == NULL) {

	test	rbp, rbp
	jne	SHORT $LN3@CMakeRende

; 58   : 		_CSyncLeaveErr(NULL, "CMakerRenderClass failed because mesh was NULL");

	lea	rcx, OFFSET FLAT:??_C@_0CP@CHDAJNED@CMakerRenderClass?5failed?5becaus@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN18@CMakeRende
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN18@CMakeRende:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [r12+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 58   : 		_CSyncLeaveErr(NULL, "CMakerRenderClass failed because mesh was NULL");

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 58   : 		_CSyncLeaveErr(NULL, "CMakerRenderClass failed because mesh was NULL");

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax

; 80   : }

	mov	rbp, QWORD PTR [rsp+88]
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r12
	pop	rsi
	ret	0
$LN3@CMakeRende:
	mov	QWORD PTR [rsp+64], rbx

; 59   : 	}
; 60   : 
; 61   : 	PCRenderClass rClass = CInternalAlloc(sizeof(CRenderClass));

	mov	ecx, 480				; 000001e0H
	mov	QWORD PTR [rsp+72], rdi
	mov	QWORD PTR [rsp+80], r14
	call	CInternalAlloc
	mov	r14, rax

; 10   : 	const SIZE_T srcLen = strlen(source);

	mov	rbx, -1
	npad	7
$LL27@CMakeRende:
	inc	rbx
	cmp	BYTE PTR [rsi+rbx], 0
	jne	SHORT $LL27@CMakeRende

; 11   : 	*destPtr = CInternalAlloc(srcLen + 1); //+1 for NULL terminator

	lea	rcx, QWORD PTR [rbx+1]
	call	CInternalAlloc
	mov	QWORD PTR [r14], rax

; 12   : 	COPY_BYTES(source, *destPtr, srcLen);

	mov	rdi, rax
	mov	rcx, rbx
	rep movsb

; 62   : 	_initializeAndCopyString(name, &rClass->name); // init name
; 63   : 
; 64   : 	// apply mesh
; 65   : 	// NOTE: Mesh is FIXED once class has been made
; 66   : 	rClass->mesh = mesh;

	mov	QWORD PTR [r14+8], rbp

; 67   : 
; 68   : 	// set default material (0) to input material (NULL is acceptable)
; 69   : 	rClass->materials[0] = material;

	mov	QWORD PTR [r14+400], r15

; 70   : 
; 71   : 	// by default, class with use singleMaterial (only materials[0] is used for ALL tris)
; 72   : 	rClass->singleMaterial = TRUE;

	mov	DWORD PTR [r14+464], 1

; 77   : 		= CInternalAlloc(sizeof(UINT32) * realMesh->triCount);

	mov	ecx, DWORD PTR [rbp+32]
	shl	rcx, 2
	call	CInternalAlloc
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	rdi, QWORD PTR [rsp+72]
	mov	rbx, QWORD PTR [rsp+64]
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 77   : 		= CInternalAlloc(sizeof(UINT32) * realMesh->triCount);

	mov	QWORD PTR [r14+472], rax
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN25@CMakeRende
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN25@CMakeRende:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [r12+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 79   : 	_CSyncLeave(rClass);

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 79   : 	_CSyncLeave(rClass);

	call	QWORD PTR __imp_LeaveCriticalSection

; 80   : }

	mov	rbp, QWORD PTR [rsp+88]
	mov	rax, r14
	mov	r14, QWORD PTR [rsp+80]
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r12
	pop	rsi
	ret	0
CMakeRenderClass ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
;	COMDAT CDestroyRenderClass
_TEXT	SEGMENT
pClass$ = 48
CDestroyRenderClass PROC				; COMDAT

; 82   : CSMCALL BOOL	CDestroyRenderClass(PCHandle pClass) {

$LN26:
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 82   : CSMCALL BOOL	CDestroyRenderClass(PCHandle pClass) {

	mov	rdi, rcx
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	cmp	eax, 128				; 00000080H
	jb	SHORT $LN8@CDestroyRe
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN8@CDestroyRe:
; File C:\Bailey\Programming\Caesium\csmint.c

; 12   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = funcname;

	lea	rcx, OFFSET FLAT:??_C@_0BE@GAAOHGLP@CDestroyRenderClass@
	mov	QWORD PTR [rsp+48], rbx
	lea	rsi, OFFSET FLAT:_csmint
	mov	QWORD PTR [rsi+rax*8+200], rcx
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 83   : 	_CSyncEnter();

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 13   : 	_csmint.funcNameStackPtr++;

	inc	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 83   : 	_CSyncEnter();

	call	QWORD PTR __imp_EnterCriticalSection

; 84   : 
; 85   : 	if (pClass == NULL) {

	test	rdi, rdi
	jne	SHORT $LN2@CDestroyRe

; 86   : 		_CSyncLeaveErr(FALSE, "CDestroyRenderClass failed because pClass was NULL");

	lea	rcx, OFFSET FLAT:??_C@_0DD@IOLBLGBA@CDestroyRenderClass?5failed?5beca@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN13@CDestroyRe
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN13@CDestroyRe:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	xor	ebx, ebx
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 86   : 		_CSyncLeaveErr(FALSE, "CDestroyRenderClass failed because pClass was NULL");

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rsi+rax*8+200], rbx

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 86   : 		_CSyncLeaveErr(FALSE, "CDestroyRenderClass failed because pClass was NULL");

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax
	mov	rbx, QWORD PTR [rsp+48]

; 103  : }

	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@CDestroyRe:

; 87   : 	}
; 88   : 
; 89   : 	PCRenderClass rClass = *pClass;

	mov	rbx, QWORD PTR [rdi]

; 90   : 
; 91   : 	if (rClass == NULL) {

	test	rbx, rbx
	jne	SHORT $LN3@CDestroyRe

; 92   : 		_CSyncLeaveErr(FALSE, "CDestroyRenderClass failed because pClass was invalid");

	lea	rcx, OFFSET FLAT:??_C@_0DG@OANPGKPE@CDestroyRenderClass?5failed?5beca@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN18@CDestroyRe
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN18@CDestroyRe:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	xor	ebx, ebx
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 92   : 		_CSyncLeaveErr(FALSE, "CDestroyRenderClass failed because pClass was invalid");

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rsi+rax*8+200], rbx

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 92   : 		_CSyncLeaveErr(FALSE, "CDestroyRenderClass failed because pClass was invalid");

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax
	mov	rbx, QWORD PTR [rsp+48]

; 103  : }

	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN3@CDestroyRe:

; 93   : 	}
; 94   : 
; 95   : 	CInternalFree(rClass->name);

	mov	rcx, QWORD PTR [rbx]
	call	CInternalFree

; 96   : 	CInternalFree(rClass->triMaterials);

	mov	rcx, QWORD PTR [rbx+472]
	call	CInternalFree

; 97   : 	CInternalFree(rClass);

	mov	rcx, rbx
	call	CInternalFree

; 98   : 
; 99   : 	// set handle to NULL
; 100  : 	*pClass = NULL;

	xor	ebx, ebx
	mov	QWORD PTR [rdi], rbx
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN23@CDestroyRe
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN23@CDestroyRe:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rsi+rax*8+200], rbx
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 102  : 	_CSyncLeave(TRUE);

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 102  : 	_CSyncLeave(TRUE);

	call	QWORD PTR __imp_LeaveCriticalSection
	mov	rbx, QWORD PTR [rsp+48]
	mov	eax, 1

; 103  : }

	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
CDestroyRenderClass ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
;	COMDAT CRenderClassGetName
_TEXT	SEGMENT
rClass$ = 48
stroutBuffer$ = 56
maxWrite$ = 64
CRenderClassGetName PROC				; COMDAT

; 106  : 	PCHAR stroutBuffer, SIZE_T maxWrite) {

$LN24:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 106  : 	PCHAR stroutBuffer, SIZE_T maxWrite) {

	mov	rdi, r8
	mov	rbx, rdx
	mov	rsi, rcx
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	cmp	eax, 128				; 00000080H
	jb	SHORT $LN9@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN9@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 12   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = funcname;

	lea	rcx, OFFSET FLAT:??_C@_0BE@NIBBBBPD@CRenderClassGetName@
	lea	rbp, OFFSET FLAT:_csmint
	mov	QWORD PTR [rbp+rax*8+200], rcx
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 107  : 	_CSyncEnter();

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 13   : 	_csmint.funcNameStackPtr++;

	inc	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 107  : 	_CSyncEnter();

	call	QWORD PTR __imp_EnterCriticalSection

; 108  : 
; 109  : 	if (rClass == NULL) {

	test	rsi, rsi
	jne	SHORT $LN2@CRenderCla

; 110  : 		_CSyncLeaveErr(FALSE, "CRenderClassGetName failed because rClass was invalid");

	lea	rcx, OFFSET FLAT:??_C@_0DG@JAAINOED@CRenderClassGetName?5failed?5beca@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN14@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN14@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rbp+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 110  : 		_CSyncLeaveErr(FALSE, "CRenderClassGetName failed because rClass was invalid");

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 110  : 		_CSyncLeaveErr(FALSE, "CRenderClassGetName failed because rClass was invalid");

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax
	jmp	$LN1@CRenderCla
$LN2@CRenderCla:

; 111  : 	}
; 112  : 
; 113  : 	PCRenderClass cObj = rClass;
; 114  : 
; 115  : 	COPY_BYTES(

	mov	rsi, QWORD PTR [rsi]
	mov	rcx, -1
	mov	rax, rcx
$LL22@CRenderCla:
	inc	rax
	cmp	BYTE PTR [rsi+rax], 0
	jne	SHORT $LL22@CRenderCla
	cmp	rax, rdi
	jae	SHORT $LN4@CRenderCla
$LL21@CRenderCla:
	inc	rcx
	cmp	BYTE PTR [rsi+rcx], 0
	jne	SHORT $LL21@CRenderCla
	jmp	SHORT $LN5@CRenderCla
$LN4@CRenderCla:
	mov	rcx, rdi
$LN5@CRenderCla:
	mov	rdi, rbx
	rep movsb
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN19@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN19@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rbp+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 121  : 	_CSyncLeave(TRUE);

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 121  : 	_CSyncLeave(TRUE);

	call	QWORD PTR __imp_LeaveCriticalSection
	mov	eax, 1
$LN1@CRenderCla:

; 122  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
CRenderClassGetName ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
;	COMDAT CRenderClassSetMaterial
_TEXT	SEGMENT
rClass$ = 48
material$ = 56
ID$ = 64
CRenderClassSetMaterial PROC				; COMDAT

; 135  : CSMCALL BOOL	CRenderClassSetMaterial(CHandle rClass, CHandle material, UINT32 ID) {

$LN26:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 135  : CSMCALL BOOL	CRenderClassSetMaterial(CHandle rClass, CHandle material, UINT32 ID) {

	mov	rsi, rdx
	mov	ebx, r8d
	mov	rdi, rcx
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	cmp	eax, 128				; 00000080H
	jb	SHORT $LN8@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN8@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 12   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = funcname;

	lea	rcx, OFFSET FLAT:??_C@_0BI@NDFCLEDJ@CRenderClassSetMaterial@
	lea	rbp, OFFSET FLAT:_csmint
	mov	QWORD PTR [rbp+rax*8+200], rcx
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 136  : 	_CSyncEnter();

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 13   : 	_csmint.funcNameStackPtr++;

	inc	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 136  : 	_CSyncEnter();

	call	QWORD PTR __imp_EnterCriticalSection

; 137  : 
; 138  : 	if (rClass == NULL) {

	test	rdi, rdi
	jne	SHORT $LN2@CRenderCla

; 139  : 		_CSyncLeaveErr(FALSE, "CRenderClassSetMaterial failed because rClass was invalid");

	lea	rcx, OFFSET FLAT:??_C@_0DK@GDCJECCE@CRenderClassSetMaterial?5failed?5@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN13@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN13@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rbp+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 139  : 		_CSyncLeaveErr(FALSE, "CRenderClassSetMaterial failed because rClass was invalid");

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 139  : 		_CSyncLeaveErr(FALSE, "CRenderClassSetMaterial failed because rClass was invalid");

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax
	jmp	$LN1@CRenderCla
$LN2@CRenderCla:

; 140  : 	}
; 141  : 	if (ID >= CSM_CLASS_MAX_MATERIALS) {

	cmp	ebx, 8
	jb	SHORT $LN3@CRenderCla

; 142  : 		_CSyncLeaveErr(FALSE, "CRenderClassSetMaterial failed because ID was invalid");

	lea	rcx, OFFSET FLAT:??_C@_0DG@BKOJNOIH@CRenderClassSetMaterial?5failed?5@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN18@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN18@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rbp+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 142  : 		_CSyncLeaveErr(FALSE, "CRenderClassSetMaterial failed because ID was invalid");

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 142  : 		_CSyncLeaveErr(FALSE, "CRenderClassSetMaterial failed because ID was invalid");

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax
	jmp	SHORT $LN1@CRenderCla
$LN3@CRenderCla:

; 143  : 	}
; 144  : 
; 145  : 	PCRenderClass cObj = rClass;
; 146  : 	cObj->materials[ID] = material;

	mov	QWORD PTR [rdi+rbx*8+400], rsi
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN23@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN23@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rbp+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 148  : 	_CSyncLeave(TRUE);

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 148  : 	_CSyncLeave(TRUE);

	call	QWORD PTR __imp_LeaveCriticalSection
	mov	eax, 1
$LN1@CRenderCla:

; 149  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
CRenderClassSetMaterial ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
;	COMDAT CRenderClassGetMaterial
_TEXT	SEGMENT
rClass$ = 48
ID$ = 56
CRenderClassGetMaterial PROC				; COMDAT

; 151  : CSMCALL CHandle CRenderClassGetMaterial(CHandle rClass, UINT32 ID) {

$LN26:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 151  : CSMCALL CHandle CRenderClassGetMaterial(CHandle rClass, UINT32 ID) {

	mov	rdi, rcx
	mov	ebx, edx
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	cmp	eax, 128				; 00000080H
	jb	SHORT $LN8@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN8@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 12   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = funcname;

	lea	rcx, OFFSET FLAT:??_C@_0BI@NMEMGCLK@CRenderClassGetMaterial@
	lea	rsi, OFFSET FLAT:_csmint
	mov	QWORD PTR [rsi+rax*8+200], rcx
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 152  : 	_CSyncEnter();

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 13   : 	_csmint.funcNameStackPtr++;

	inc	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 152  : 	_CSyncEnter();

	call	QWORD PTR __imp_EnterCriticalSection

; 153  : 
; 154  : 	if (rClass == NULL) {

	test	rdi, rdi
	jne	SHORT $LN2@CRenderCla

; 155  : 		_CSyncLeaveErr(NULL, "CRenderClassGetMaterial failed because rClass was invalid");

	lea	rcx, OFFSET FLAT:??_C@_0DK@NGCDIKBN@CRenderClassGetMaterial?5failed?5@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN13@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN13@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rsi+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 155  : 		_CSyncLeaveErr(NULL, "CRenderClassGetMaterial failed because rClass was invalid");

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 155  : 		_CSyncLeaveErr(NULL, "CRenderClassGetMaterial failed because rClass was invalid");

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax

; 164  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@CRenderCla:

; 156  : 	}
; 157  : 	if (ID >= CSM_CLASS_MAX_MATERIALS) {

	cmp	ebx, 8
	jb	SHORT $LN3@CRenderCla

; 158  : 		_CSyncLeaveErr(NULL, "CRenderClassGetMaterial failed because ID was invalid");

	lea	rcx, OFFSET FLAT:??_C@_0DG@OAKKKOJC@CRenderClassGetMaterial?5failed?5@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN18@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN18@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rsi+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 158  : 		_CSyncLeaveErr(NULL, "CRenderClassGetMaterial failed because ID was invalid");

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 158  : 		_CSyncLeaveErr(NULL, "CRenderClassGetMaterial failed because ID was invalid");

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax

; 164  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN3@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN23@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN23@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rsi+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 163  : 	_CSyncLeave(cObj->materials[ID]);

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 163  : 	_CSyncLeave(cObj->materials[ID]);

	call	QWORD PTR __imp_LeaveCriticalSection
	mov	rax, QWORD PTR [rdi+rbx*8+400]

; 164  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
CRenderClassGetMaterial ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
;	COMDAT CRenderClassGetMaterialID
_TEXT	SEGMENT
rClass$ = 48
name$ = 56
CRenderClassGetMaterialID PROC				; COMDAT

; 166  : CSMCALL UINT32	CRenderClassGetMaterialID(CHandle rClass, PCHAR name) {

$LN45:
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rdi
	push	r14
	sub	rsp, 32					; 00000020H
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 166  : CSMCALL UINT32	CRenderClassGetMaterialID(CHandle rClass, PCHAR name) {

	mov	rbp, rdx
	mov	rdi, rcx
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	cmp	eax, 128				; 00000080H
	jb	SHORT $LN13@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN13@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 12   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = funcname;

	lea	rcx, OFFSET FLAT:??_C@_0BK@FGMIKGEE@CRenderClassGetMaterialID@
	lea	r14, OFFSET FLAT:_csmint
	mov	QWORD PTR [r14+rax*8+200], rcx
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 167  : 	_CSyncEnter();

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 13   : 	_csmint.funcNameStackPtr++;

	inc	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 167  : 	_CSyncEnter();

	call	QWORD PTR __imp_EnterCriticalSection

; 168  : 
; 169  : 	if (rClass == NULL) {

	test	rdi, rdi
	jne	SHORT $LN5@CRenderCla

; 170  : 		_CSyncLeaveErr(CSM_BAD_ID, 

	lea	rcx, OFFSET FLAT:??_C@_0DM@GBOGKMPH@CRenderClassGetMaterialID?5faile@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN18@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN18@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [r14+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 170  : 		_CSyncLeaveErr(CSM_BAD_ID, 

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 170  : 		_CSyncLeaveErr(CSM_BAD_ID, 

	call	QWORD PTR __imp_LeaveCriticalSection
	mov	eax, -1					; ffffffffH

; 194  : 		"CRenderClassGetMaterialID failed because name could not be found");
; 195  : }

	mov	rbp, QWORD PTR [rsp+56]
	mov	rdi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
$LN5@CRenderCla:

; 171  : 			"CRenderClassGetMaterialID failed because rClass was invalid");
; 172  : 	}
; 173  : 	if (name == NULL) {

	test	rbp, rbp
	jne	SHORT $LN6@CRenderCla

; 174  : 		_CSyncLeaveErr(CSM_BAD_ID, 

	lea	rcx, OFFSET FLAT:??_C@_0DH@MCAOPKCI@CRenderClassGetMaterialID?5faile@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN23@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN23@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [r14+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 174  : 		_CSyncLeaveErr(CSM_BAD_ID, 

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 174  : 		_CSyncLeaveErr(CSM_BAD_ID, 

	call	QWORD PTR __imp_LeaveCriticalSection
	mov	eax, -1					; ffffffffH

; 194  : 		"CRenderClassGetMaterialID failed because name could not be found");
; 195  : }

	mov	rbp, QWORD PTR [rsp+56]
	mov	rdi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
$LN6@CRenderCla:
	mov	QWORD PTR [rsp+48], rbx

; 175  : 			"CRenderClassGetMaterialID failed because name was NULL");
; 176  : 	}
; 177  : 
; 178  : 	PCRenderClass cObj = rClass;
; 179  : 
; 180  : 	// check each material within class
; 181  : 	for (UINT32 matID = 0; matID < CSM_CLASS_MAX_MATERIALS; matID++) {

	lea	r9, QWORD PTR [rdi+400]
	xor	ebx, ebx
	npad	3
$LL4@CRenderCla:

; 182  : 		PCMaterial mat = cObj->materials[matID];

	mov	r8, QWORD PTR [r9]

; 183  : 
; 184  : 		// if material is NULL, skip
; 185  : 		if (mat == NULL) continue;

	test	r8, r8
	je	SHORT $LN2@CRenderCla

; 186  : 
; 187  : 		// if string are the same, return ID
; 188  : 		if (strcmp(name, mat->name) == 0) {

	mov	r8, QWORD PTR [r8]
	mov	rax, rbp
	sub	r8, rbp
$LL41@CRenderCla:
	movzx	edx, BYTE PTR [rax]
	movzx	ecx, BYTE PTR [rax+r8]
	sub	edx, ecx
	jne	SHORT $LN42@CRenderCla
	inc	rax
	test	ecx, ecx
	jne	SHORT $LL41@CRenderCla
$LN42@CRenderCla:
	test	edx, edx
	je	SHORT $LN36@CRenderCla
$LN2@CRenderCla:

; 175  : 			"CRenderClassGetMaterialID failed because name was NULL");
; 176  : 	}
; 177  : 
; 178  : 	PCRenderClass cObj = rClass;
; 179  : 
; 180  : 	// check each material within class
; 181  : 	for (UINT32 matID = 0; matID < CSM_CLASS_MAX_MATERIALS; matID++) {

	inc	ebx
	add	r9, 8
	cmp	ebx, 8
	jb	SHORT $LL4@CRenderCla

; 193  : 	_CSyncLeaveErr(CSM_BAD_ID,

	lea	rcx, OFFSET FLAT:??_C@_0EB@BPMNEBMB@CRenderClassGetMaterialID?5faile@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN33@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN33@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [r14+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 193  : 	_CSyncLeaveErr(CSM_BAD_ID,

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 193  : 	_CSyncLeaveErr(CSM_BAD_ID,

	call	QWORD PTR __imp_LeaveCriticalSection
	mov	eax, -1					; ffffffffH
$LN43@CRenderCla:

; 194  : 		"CRenderClassGetMaterialID failed because name could not be found");
; 195  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rdi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
$LN36@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN28@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN28@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	ecx, eax
	mov	QWORD PTR [r14+rcx*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 189  : 			_CSyncLeave(matID);

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 189  : 			_CSyncLeave(matID);

	call	QWORD PTR __imp_LeaveCriticalSection
	mov	eax, ebx
	jmp	SHORT $LN43@CRenderCla
CRenderClassGetMaterialID ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
;	COMDAT CRenderClassSetTriMaterialSingle
_TEXT	SEGMENT
rClass$ = 48
state$ = 56
CRenderClassSetTriMaterialSingle PROC			; COMDAT

; 197  : CSMCALL BOOL	CRenderClassSetTriMaterialSingle(CHandle rClass, BOOL state) {

$LN20:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 197  : CSMCALL BOOL	CRenderClassSetTriMaterialSingle(CHandle rClass, BOOL state) {

	mov	edi, edx
	mov	rbx, rcx
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	cmp	eax, 128				; 00000080H
	jb	SHORT $LN7@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN7@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 12   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = funcname;

	lea	rcx, OFFSET FLAT:??_C@_0CB@NJCGDCJJ@CRenderClassSetTriMaterialSingl@
	lea	rsi, OFFSET FLAT:_csmint
	mov	QWORD PTR [rsi+rax*8+200], rcx
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 198  : 	_CSyncEnter();

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 13   : 	_csmint.funcNameStackPtr++;

	inc	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 198  : 	_CSyncEnter();

	call	QWORD PTR __imp_EnterCriticalSection

; 199  : 
; 200  : 	if (rClass == NULL) {

	test	rbx, rbx
	jne	SHORT $LN2@CRenderCla

; 201  : 		_CSyncLeaveErr(FALSE, 

	lea	rcx, OFFSET FLAT:??_C@_0ED@FJLCFPFL@CRenderClassSetTriMaterialSingl@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN12@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN12@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rsi+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 201  : 		_CSyncLeaveErr(FALSE, 

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 201  : 		_CSyncLeaveErr(FALSE, 

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax

; 209  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@CRenderCla:

; 202  : 			"CRenderClassSetTriMaterialSingle failed because rClass was invalid");
; 203  : 	}
; 204  : 
; 205  : 	PCRenderClass cObj = rClass;
; 206  : 	cObj->singleMaterial = state;

	mov	DWORD PTR [rbx+464], edi
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN17@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN17@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rsi+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 208  : 	_CSyncLeave(TRUE);

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 208  : 	_CSyncLeave(TRUE);

	call	QWORD PTR __imp_LeaveCriticalSection

; 209  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	eax, 1
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
CRenderClassSetTriMaterialSingle ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
;	COMDAT CRenderClassGetTriMaterialSingle
_TEXT	SEGMENT
rClass$ = 48
outState$ = 56
CRenderClassGetTriMaterialSingle PROC			; COMDAT

; 211  : CSMCALL BOOL	CRenderClassGetTriMaterialSingle(CHandle rClass, PBOOL outState) {

$LN20:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 211  : CSMCALL BOOL	CRenderClassGetTriMaterialSingle(CHandle rClass, PBOOL outState) {

	mov	rdi, rdx
	mov	rbx, rcx
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	cmp	eax, 128				; 00000080H
	jb	SHORT $LN7@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN7@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 12   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = funcname;

	lea	rcx, OFFSET FLAT:??_C@_0CB@IADLCEMO@CRenderClassGetTriMaterialSingl@
	lea	rsi, OFFSET FLAT:_csmint
	mov	QWORD PTR [rsi+rax*8+200], rcx
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 212  : 	_CSyncEnter();

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 13   : 	_csmint.funcNameStackPtr++;

	inc	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 212  : 	_CSyncEnter();

	call	QWORD PTR __imp_EnterCriticalSection

; 213  : 
; 214  : 	if (rClass == NULL) {

	test	rbx, rbx
	jne	SHORT $LN2@CRenderCla

; 215  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:??_C@_0ED@JMBEKINI@CRenderClassGetTriMaterialSingl@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN12@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN12@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rsi+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 215  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 215  : 		_CSyncLeaveErr(FALSE,

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax

; 223  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@CRenderCla:

; 216  : 			"CRenderClassGetTriMaterialSingle failed because rClass was invalid");
; 217  : 	}
; 218  : 
; 219  : 	PCRenderClass cObj = rClass;
; 220  : 	*outState = cObj->singleMaterial;

	mov	eax, DWORD PTR [rbx+464]
	mov	DWORD PTR [rdi], eax
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN17@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN17@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rsi+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 222  : 	_CSyncLeave(TRUE);

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 222  : 	_CSyncLeave(TRUE);

	call	QWORD PTR __imp_LeaveCriticalSection

; 223  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	eax, 1
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
CRenderClassGetTriMaterialSingle ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
;	COMDAT CRenderClassSetTriMaterials
_TEXT	SEGMENT
rClass$ = 48
triMaterialIndexes$ = 56
CRenderClassSetTriMaterials PROC			; COMDAT

; 225  : CSMCALL BOOL	CRenderClassSetTriMaterials(CHandle rClass, PUINT32 triMaterialIndexes) {

$LN26:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 225  : CSMCALL BOOL	CRenderClassSetTriMaterials(CHandle rClass, PUINT32 triMaterialIndexes) {

	mov	rsi, rdx
	mov	rdi, rcx
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	cmp	eax, 128				; 00000080H
	jb	SHORT $LN8@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN8@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 12   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = funcname;

	lea	rcx, OFFSET FLAT:??_C@_0BM@EENIIEBE@CRenderClassSetTriMaterials@
	lea	rbx, OFFSET FLAT:_csmint
	mov	QWORD PTR [rbx+rax*8+200], rcx
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 226  : 	_CSyncEnter();

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 13   : 	_csmint.funcNameStackPtr++;

	inc	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 226  : 	_CSyncEnter();

	call	QWORD PTR __imp_EnterCriticalSection

; 227  : 
; 228  : 	if (rClass == NULL) {

	test	rdi, rdi
	jne	SHORT $LN2@CRenderCla

; 229  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:??_C@_0DO@DJGCMBEA@CRenderClassSetTriMaterials?5fai@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN13@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN13@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rbx+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 229  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 229  : 		_CSyncLeaveErr(FALSE,

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax

; 242  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@CRenderCla:

; 230  : 			"CRenderClassSetTriMaterials failed because rClass was invalid");
; 231  : 	}
; 232  : 	if (triMaterialIndexes == NULL) {

	test	rsi, rsi
	jne	SHORT $LN3@CRenderCla

; 233  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:??_C@_0EH@PKBGPGHF@CRenderClassSetTriMaterials?5fai@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN18@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN18@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rbx+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 233  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 233  : 		_CSyncLeaveErr(FALSE,

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax

; 242  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN3@CRenderCla:

; 234  : 			"CRenderClassSetTriMaterials failed because triMaterialIndexes was NULL");
; 235  : 	}
; 236  : 
; 237  : 	PCRenderClass cObj = rClass;
; 238  : 	PCMesh objMesh = cObj->mesh;
; 239  : 	COPY_BYTES(triMaterialIndexes, cObj->triMaterials, sizeof(UINT32) * objMesh->triCount);

	mov	rax, QWORD PTR [rdi+8]
	mov	rdi, QWORD PTR [rdi+472]
	mov	ecx, DWORD PTR [rax+32]
	shl	rcx, 2
	rep movsb
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN23@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN23@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rbx+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 241  : 	_CSyncLeave(TRUE);

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 241  : 	_CSyncLeave(TRUE);

	call	QWORD PTR __imp_LeaveCriticalSection

; 242  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	eax, 1
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
CRenderClassSetTriMaterials ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
;	COMDAT CRenderClassGetTriMaterial
_TEXT	SEGMENT
rClass$ = 48
triMaterialIndex$ = 56
CRenderClassGetTriMaterial PROC				; COMDAT

; 244  : CSMCALL CHandle	CRenderClassGetTriMaterial(CHandle rClass, UINT32 triMaterialIndex) {

$LN32:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 244  : CSMCALL CHandle	CRenderClassGetTriMaterial(CHandle rClass, UINT32 triMaterialIndex) {

	mov	rbx, rcx
	mov	edi, edx
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	cmp	eax, 128				; 00000080H
	jb	SHORT $LN9@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN9@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 12   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = funcname;

	lea	rcx, OFFSET FLAT:??_C@_0BL@NLLLLNMG@CRenderClassGetTriMaterial@
	lea	rsi, OFFSET FLAT:_csmint
	mov	QWORD PTR [rsi+rax*8+200], rcx
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 245  : 	_CSyncEnter();

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 13   : 	_csmint.funcNameStackPtr++;

	inc	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 245  : 	_CSyncEnter();

	call	QWORD PTR __imp_EnterCriticalSection

; 246  : 
; 247  : 	if (rClass == NULL) {

	test	rbx, rbx
	jne	SHORT $LN2@CRenderCla

; 248  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:??_C@_0DN@PHPMIKAF@CRenderClassGetTriMaterial?5fail@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN14@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN14@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rsi+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 248  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 248  : 		_CSyncLeaveErr(FALSE,

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax

; 270  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@CRenderCla:

; 249  : 			"CRenderClassGetTriMaterial failed because rClass was invalid");
; 250  : 	}
; 251  : 
; 252  : 	PCRenderClass cObj = rClass;
; 253  : 	PCMesh objMesh = cObj->mesh;
; 254  : 
; 255  : 	if (triMaterialIndex >= objMesh->triCount) {

	mov	rax, QWORD PTR [rbx+8]
	cmp	edi, DWORD PTR [rax+32]
	jb	SHORT $LN3@CRenderCla

; 256  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:??_C@_0EH@MGLNFGP@CRenderClassGetTriMaterial?5fail@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN19@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN19@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rsi+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 256  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 256  : 		_CSyncLeaveErr(FALSE,

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax

; 270  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN3@CRenderCla:

; 257  : 			"CRenderClassGetTriMaterial failed because triMaterialIndex was invalid");
; 258  : 	}
; 259  : 
; 260  : 	// get ID from triMaterialList and check if it's valid
; 261  : 	UINT32 ID = cObj->triMaterials[triMaterialIndex];

	mov	rax, QWORD PTR [rbx+472]
	mov	edi, DWORD PTR [rax+rdi*4]

; 262  : 
; 263  : 	if (ID >= CSM_CLASS_MAX_MATERIALS) {

	cmp	edi, 8
	jb	SHORT $LN4@CRenderCla

; 264  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:??_C@_0EL@BOICEKHA@CRenderClassGetTriMaterial?5fail@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN24@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN24@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rsi+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 264  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 264  : 		_CSyncLeaveErr(FALSE,

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax

; 270  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN4@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN29@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN29@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rsi+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 269  : 	_CSyncLeave(cObj->materials[ID]);

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 269  : 	_CSyncLeave(cObj->materials[ID]);

	call	QWORD PTR __imp_LeaveCriticalSection
	mov	rax, QWORD PTR [rbx+rdi*8+400]

; 270  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
CRenderClassGetTriMaterial ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
;	COMDAT CRenderClassGetTriMaterialID
_TEXT	SEGMENT
rClass$ = 48
triMaterialIndex$ = 56
CRenderClassGetTriMaterialID PROC			; COMDAT

; 272  : CSMCALL UINT32  CRenderClassGetTriMaterialID(CHandle rClass, UINT32 triMaterialIndex) {

$LN26:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 272  : CSMCALL UINT32  CRenderClassGetTriMaterialID(CHandle rClass, UINT32 triMaterialIndex) {

	mov	rbx, rcx
	mov	edi, edx
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	cmp	eax, 128				; 00000080H
	jb	SHORT $LN8@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN8@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 12   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = funcname;

	lea	rcx, OFFSET FLAT:??_C@_0BN@MDCOFIAM@CRenderClassGetTriMaterialID@
	lea	rsi, OFFSET FLAT:_csmint
	mov	QWORD PTR [rsi+rax*8+200], rcx
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 273  : 	_CSyncEnter();

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 13   : 	_csmint.funcNameStackPtr++;

	inc	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 273  : 	_CSyncEnter();

	call	QWORD PTR __imp_EnterCriticalSection

; 274  : 
; 275  : 	if (rClass == NULL) {

	test	rbx, rbx
	jne	SHORT $LN2@CRenderCla

; 276  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:??_C@_0DN@PHPMIKAF@CRenderClassGetTriMaterial?5fail@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN13@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN13@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rsi+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 276  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 276  : 		_CSyncLeaveErr(FALSE,

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax

; 291  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@CRenderCla:

; 277  : 			"CRenderClassGetTriMaterial failed because rClass was invalid");
; 278  : 	}
; 279  : 
; 280  : 	PCRenderClass cObj = rClass;
; 281  : 	PCMesh objMesh = cObj->mesh;
; 282  : 
; 283  : 	if (triMaterialIndex >= objMesh->triCount) {

	mov	rax, QWORD PTR [rbx+8]
	cmp	edi, DWORD PTR [rax+32]
	jb	SHORT $LN3@CRenderCla

; 284  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:??_C@_0EH@MGLNFGP@CRenderClassGetTriMaterial?5fail@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN18@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN18@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rsi+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 284  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 284  : 		_CSyncLeaveErr(FALSE,

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax

; 291  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN3@CRenderCla:

; 285  : 			"CRenderClassGetTriMaterial failed because triMaterialIndex was invalid");
; 286  : 	}
; 287  : 
; 288  : 	// get ID from triMaterialList and return
; 289  : 	UINT32 ID = cObj->triMaterials[triMaterialIndex];

	mov	rax, QWORD PTR [rbx+472]
	mov	ebx, DWORD PTR [rax+rdi*4]
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN23@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN23@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	ecx, eax
	mov	QWORD PTR [rsi+rcx*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 290  : 	_CSyncLeave(ID);

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 290  : 	_CSyncLeave(ID);

	call	QWORD PTR __imp_LeaveCriticalSection

; 291  : }

	mov	rsi, QWORD PTR [rsp+56]
	mov	eax, ebx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
CRenderClassGetTriMaterialID ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
;	COMDAT CRenderClassSetVertexDataBuffer
_TEXT	SEGMENT
rClass$ = 48
vdBuffer$ = 56
ID$ = 64
CRenderClassSetVertexDataBuffer PROC			; COMDAT

; 293  : CSMCALL BOOL	CRenderClassSetVertexDataBuffer(CHandle rClass, CHandle vdBuffer, UINT32 ID) {

$LN26:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 293  : CSMCALL BOOL	CRenderClassSetVertexDataBuffer(CHandle rClass, CHandle vdBuffer, UINT32 ID) {

	mov	rsi, rdx
	mov	ebx, r8d
	mov	rdi, rcx
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	cmp	eax, 128				; 00000080H
	jb	SHORT $LN8@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN8@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 12   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = funcname;

	lea	rcx, OFFSET FLAT:??_C@_0CA@FAKFBMPP@CRenderClassSetVertexDataBuffer@
	lea	rbp, OFFSET FLAT:_csmint
	mov	QWORD PTR [rbp+rax*8+200], rcx
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 294  : 	_CSyncEnter();

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 13   : 	_csmint.funcNameStackPtr++;

	inc	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 294  : 	_CSyncEnter();

	call	QWORD PTR __imp_EnterCriticalSection

; 295  : 
; 296  : 	if (rClass == NULL) {

	test	rdi, rdi
	jne	SHORT $LN2@CRenderCla

; 297  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:??_C@_0EC@KJBKKONJ@CRenderClassSetVertexDataBuffer@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN13@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN13@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rbp+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 297  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 297  : 		_CSyncLeaveErr(FALSE,

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax
	jmp	$LN1@CRenderCla
$LN2@CRenderCla:

; 298  : 			"CRenderClassSetVertexDataBuffer failed because rClass was invalid");
; 299  : 	}
; 300  : 
; 301  : 	if (ID >= CSM_CLASS_MAX_VERTEX_DATA) {

	cmp	ebx, 16
	jb	SHORT $LN3@CRenderCla

; 302  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:??_C@_0DO@JMHNBPGA@CRenderClassSetVertexDataBuffer@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN18@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN18@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rbp+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 302  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 302  : 		_CSyncLeaveErr(FALSE,

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax
	jmp	SHORT $LN1@CRenderCla
$LN3@CRenderCla:

; 303  : 			"CRenderClassSetVertexDataBuffer failed because ID was invalid");
; 304  : 	}
; 305  : 
; 306  : 	PCRenderClass cObj = rClass;
; 307  : 	cObj->vertexBuffers[ID] = vdBuffer;

	mov	QWORD PTR [rdi+rbx*8+16], rsi
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN23@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN23@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rbp+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 309  : 	_CSyncLeave(TRUE);

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 309  : 	_CSyncLeave(TRUE);

	call	QWORD PTR __imp_LeaveCriticalSection
	mov	eax, 1
$LN1@CRenderCla:

; 310  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
CRenderClassSetVertexDataBuffer ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
;	COMDAT CRenderClassGetVertexDataBuffer
_TEXT	SEGMENT
rClass$ = 48
ID$ = 56
CRenderClassGetVertexDataBuffer PROC			; COMDAT

; 312  : CSMCALL CHandle CRenderClassGetVertexDataBuffer(CHandle rClass, UINT32 ID) {

$LN26:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 312  : CSMCALL CHandle CRenderClassGetVertexDataBuffer(CHandle rClass, UINT32 ID) {

	mov	rdi, rcx
	mov	ebx, edx
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	cmp	eax, 128				; 00000080H
	jb	SHORT $LN8@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN8@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 12   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = funcname;

	lea	rcx, OFFSET FLAT:??_C@_0CA@POIOFMID@CRenderClassGetVertexDataBuffer@
	lea	rsi, OFFSET FLAT:_csmint
	mov	QWORD PTR [rsi+rax*8+200], rcx
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 313  : 	_CSyncEnter();

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 13   : 	_csmint.funcNameStackPtr++;

	inc	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 313  : 	_CSyncEnter();

	call	QWORD PTR __imp_EnterCriticalSection

; 314  : 
; 315  : 	if (rClass == NULL) {

	test	rdi, rdi
	jne	SHORT $LN2@CRenderCla

; 316  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:??_C@_0EC@LFNGJDGB@CRenderClassGetVertexDataBuffer@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN13@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN13@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rsi+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 316  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 316  : 		_CSyncLeaveErr(FALSE,

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax

; 328  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@CRenderCla:

; 317  : 			"CRenderClassGetVertexDataBuffer failed because rClass was invalid");
; 318  : 	}
; 319  : 
; 320  : 	if (ID >= CSM_CLASS_MAX_VERTEX_DATA) {

	cmp	ebx, 16
	jb	SHORT $LN3@CRenderCla

; 321  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:??_C@_0DO@MPAGMADK@CRenderClassGetVertexDataBuffer@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN18@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN18@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rsi+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 321  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 321  : 		_CSyncLeaveErr(FALSE,

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax

; 328  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN3@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN23@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN23@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rsi+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 327  : 	_CSyncLeave(cObj->vertexBuffers[ID]);

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 327  : 	_CSyncLeave(cObj->vertexBuffers[ID]);

	call	QWORD PTR __imp_LeaveCriticalSection
	mov	rax, QWORD PTR [rdi+rbx*8+16]

; 328  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
CRenderClassGetVertexDataBuffer ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
;	COMDAT CRenderClassGetVertexDataBufferID
_TEXT	SEGMENT
rClass$ = 48
name$ = 56
CRenderClassGetVertexDataBufferID PROC			; COMDAT

; 330  : CSMCALL UINT32  CRenderClassGetVertexDataBufferID(CHandle rClass, PCHAR name) {

$LN45:
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rdi
	push	r14
	sub	rsp, 32					; 00000020H
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 330  : CSMCALL UINT32  CRenderClassGetVertexDataBufferID(CHandle rClass, PCHAR name) {

	mov	rbp, rdx
	mov	rdi, rcx
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	cmp	eax, 128				; 00000080H
	jb	SHORT $LN13@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN13@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 12   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = funcname;

	lea	rcx, OFFSET FLAT:??_C@_0CC@JJCNBEJH@CRenderClassGetVertexDataBuffer@
	lea	r14, OFFSET FLAT:_csmint
	mov	QWORD PTR [r14+rax*8+200], rcx
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 331  : 	_CSyncEnter();

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 13   : 	_csmint.funcNameStackPtr++;

	inc	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 331  : 	_CSyncEnter();

	call	QWORD PTR __imp_EnterCriticalSection

; 332  : 
; 333  : 	if (rClass == NULL) {

	test	rdi, rdi
	jne	SHORT $LN5@CRenderCla

; 334  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:??_C@_0EE@IGAHFBDI@CRenderClassGetVertexDataBuffer@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN18@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN18@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [r14+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 334  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 334  : 		_CSyncLeaveErr(FALSE,

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax

; 359  : 		"CRenderClassGetVertexDataBufferID failed because name could not be found");
; 360  : }

	mov	rbp, QWORD PTR [rsp+56]
	mov	rdi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
$LN5@CRenderCla:

; 335  : 			"CRenderClassGetVertexDataBufferID failed because rClass was invalid");
; 336  : 	}
; 337  : 
; 338  : 	if (name == NULL) {

	test	rbp, rbp
	jne	SHORT $LN6@CRenderCla

; 339  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:??_C@_0DP@BKCMHNJM@CRenderClassGetVertexDataBuffer@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN23@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN23@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [r14+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 339  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 339  : 		_CSyncLeaveErr(FALSE,

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax

; 359  : 		"CRenderClassGetVertexDataBufferID failed because name could not be found");
; 360  : }

	mov	rbp, QWORD PTR [rsp+56]
	mov	rdi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
$LN6@CRenderCla:
	mov	QWORD PTR [rsp+48], rbx

; 340  : 			"CRenderClassGetVertexDataBufferID failed because name was NULL");
; 341  : 	}
; 342  : 
; 343  : 	PCRenderClass cObj = rClass;
; 344  : 
; 345  : 	// loop all vertex buffers of cObj
; 346  : 	for (UINT32 vbID = 0; vbID < CSM_CLASS_MAX_VERTEX_DATA; vbID++) {

	lea	r9, QWORD PTR [rdi+16]
	xor	ebx, ebx
$LL4@CRenderCla:

; 347  : 		PCVertexDataBuffer vBuffer = cObj->vertexBuffers[vbID];

	mov	rax, QWORD PTR [r9]

; 348  : 		// skip if NULL
; 349  : 		if (vBuffer == NULL) continue;

	test	rax, rax
	je	SHORT $LN2@CRenderCla

; 350  : 
; 351  : 		// if names are matching, return ID
; 352  : 		if (strcmp(vBuffer->name, name) == 0) {

	mov	rax, QWORD PTR [rax]
	mov	r8, rbp
	sub	r8, rax
	npad	11
$LL41@CRenderCla:
	movzx	edx, BYTE PTR [rax]
	movzx	ecx, BYTE PTR [rax+r8]
	sub	edx, ecx
	jne	SHORT $LN42@CRenderCla
	inc	rax
	test	ecx, ecx
	jne	SHORT $LL41@CRenderCla
$LN42@CRenderCla:
	test	edx, edx
	je	SHORT $LN36@CRenderCla
$LN2@CRenderCla:

; 340  : 			"CRenderClassGetVertexDataBufferID failed because name was NULL");
; 341  : 	}
; 342  : 
; 343  : 	PCRenderClass cObj = rClass;
; 344  : 
; 345  : 	// loop all vertex buffers of cObj
; 346  : 	for (UINT32 vbID = 0; vbID < CSM_CLASS_MAX_VERTEX_DATA; vbID++) {

	inc	ebx
	add	r9, 8
	cmp	ebx, 16
	jb	SHORT $LL4@CRenderCla

; 358  : 	_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:??_C@_0EJ@LJJLCPAN@CRenderClassGetVertexDataBuffer@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN33@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN33@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [r14+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 358  : 	_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 358  : 	_CSyncLeaveErr(FALSE,

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax
$LN43@CRenderCla:

; 359  : 		"CRenderClassGetVertexDataBufferID failed because name could not be found");
; 360  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rdi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
$LN36@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN28@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN28@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	ecx, eax
	mov	QWORD PTR [r14+rcx*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 353  : 			_CSyncLeave(vbID);

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 353  : 			_CSyncLeave(vbID);

	call	QWORD PTR __imp_LeaveCriticalSection
	mov	eax, ebx
	jmp	SHORT $LN43@CRenderCla
CRenderClassGetVertexDataBufferID ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
;	COMDAT CRenderClassSetStaticDataBuffer
_TEXT	SEGMENT
rClass$ = 48
sdBuffer$ = 56
ID$ = 64
CRenderClassSetStaticDataBuffer PROC			; COMDAT

; 362  : CSMCALL BOOL	CRenderClassSetStaticDataBuffer(CHandle rClass, CHandle sdBuffer, UINT32 ID) {

$LN26:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 362  : CSMCALL BOOL	CRenderClassSetStaticDataBuffer(CHandle rClass, CHandle sdBuffer, UINT32 ID) {

	mov	rsi, rdx
	mov	ebx, r8d
	mov	rdi, rcx
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	cmp	eax, 128				; 00000080H
	jb	SHORT $LN8@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN8@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 12   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = funcname;

	lea	rcx, OFFSET FLAT:??_C@_0CA@FOGLFKED@CRenderClassSetStaticDataBuffer@
	lea	rbp, OFFSET FLAT:_csmint
	mov	QWORD PTR [rbp+rax*8+200], rcx
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 363  : 	_CSyncEnter();

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 13   : 	_csmint.funcNameStackPtr++;

	inc	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 363  : 	_CSyncEnter();

	call	QWORD PTR __imp_EnterCriticalSection

; 364  : 
; 365  : 	if (rClass == NULL) {

	test	rdi, rdi
	jne	SHORT $LN2@CRenderCla

; 366  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:??_C@_0EC@FPBADPMF@CRenderClassSetStaticDataBuffer@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN13@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN13@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rbp+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 366  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 366  : 		_CSyncLeaveErr(FALSE,

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax
	jmp	$LN1@CRenderCla
$LN2@CRenderCla:

; 367  : 			"CRenderClassSetStaticDataBuffer failed because rClass was invalid");
; 368  : 	}
; 369  : 
; 370  : 	if (ID >= CSM_CLASS_MAX_STATIC_DATA) {

	cmp	ebx, 32					; 00000020H
	jb	SHORT $LN3@CRenderCla

; 371  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:??_C@_0DO@NDKGGPLA@CRenderClassSetStaticDataBuffer@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN18@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN18@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rbp+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 371  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 371  : 		_CSyncLeaveErr(FALSE,

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax
	jmp	SHORT $LN1@CRenderCla
$LN3@CRenderCla:

; 372  : 			"CRenderClassSetStaticDataBuffer failed because ID was invalid");
; 373  : 	}
; 374  : 
; 375  : 	PCRenderClass cObj = rClass;
; 376  : 	cObj->staticBuffers[ID] = sdBuffer;

	mov	QWORD PTR [rdi+rbx*8+144], rsi
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN23@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN23@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [rbp+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 378  : 	_CSyncLeave(TRUE);

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 378  : 	_CSyncLeave(TRUE);

	call	QWORD PTR __imp_LeaveCriticalSection
	mov	eax, 1
$LN1@CRenderCla:

; 379  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
CRenderClassSetStaticDataBuffer ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csmint_error.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
; File C:\Bailey\Programming\Caesium\csmint.c
; File C:\Bailey\Programming\Caesium\csm_renderclass.c
;	COMDAT CRenderClassGetStaticDataBufferID
_TEXT	SEGMENT
rClass$ = 48
name$ = 56
CRenderClassGetStaticDataBufferID PROC			; COMDAT

; 399  : CSMCALL UINT32  CRenderClassGetStaticDataBufferID(CHandle rClass, PCHAR name) {

$LN45:
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rdi
	push	r14
	sub	rsp, 32					; 00000020H
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 399  : CSMCALL UINT32  CRenderClassGetStaticDataBufferID(CHandle rClass, PCHAR name) {

	mov	rbp, rdx
	mov	rdi, rcx
; File C:\Bailey\Programming\Caesium\csmint.c

; 9    : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	cmp	eax, 128				; 00000080H
	jb	SHORT $LN13@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN13@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 12   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = funcname;

	lea	rcx, OFFSET FLAT:??_C@_0CC@EOOCBPEI@CRenderClassGetStaticDataBuffer@
	lea	r14, OFFSET FLAT:_csmint
	mov	QWORD PTR [r14+rax*8+200], rcx
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 400  : 	_CSyncEnter();

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 13   : 	_csmint.funcNameStackPtr++;

	inc	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 400  : 	_CSyncEnter();

	call	QWORD PTR __imp_EnterCriticalSection

; 401  : 
; 402  : 	if (rClass == NULL) {

	test	rdi, rdi
	jne	SHORT $LN5@CRenderCla

; 403  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:??_C@_0EE@OHHIFJLN@CRenderClassGetStaticDataBuffer@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN18@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN18@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [r14+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 403  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 403  : 		_CSyncLeaveErr(FALSE,

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax

; 428  : 		"CRenderClassGetStaticDataBufferID failed because name could not be found");
; 429  : }

	mov	rbp, QWORD PTR [rsp+56]
	mov	rdi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
$LN5@CRenderCla:

; 404  : 			"CRenderClassGetStaticDataBufferID failed because rClass was invalid");
; 405  : 	}
; 406  : 
; 407  : 	if (name == NULL) {

	test	rbp, rbp
	jne	SHORT $LN6@CRenderCla

; 408  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:??_C@_0DP@JMLAHEDI@CRenderClassGetStaticDataBuffer@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN23@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN23@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [r14+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 408  : 		_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 408  : 		_CSyncLeaveErr(FALSE,

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax

; 428  : 		"CRenderClassGetStaticDataBufferID failed because name could not be found");
; 429  : }

	mov	rbp, QWORD PTR [rsp+56]
	mov	rdi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
$LN6@CRenderCla:
	mov	QWORD PTR [rsp+48], rbx

; 409  : 			"CRenderClassGetStaticDataBufferID failed because name was NULL");
; 410  : 	}
; 411  : 
; 412  : 	PCRenderClass cObj = rClass;
; 413  : 
; 414  : 	// loop all static buffers of cObj
; 415  : 	for (UINT32 sbID = 0; sbID < CSM_CLASS_MAX_STATIC_DATA; sbID++) {

	lea	r9, QWORD PTR [rdi+144]
	xor	ebx, ebx
$LL4@CRenderCla:

; 416  : 		PCStaticDataBuffer sBuffer = cObj->staticBuffers[sbID];

	mov	rax, QWORD PTR [r9]

; 417  : 		// skip if NULL
; 418  : 		if (sBuffer == NULL) continue;

	test	rax, rax
	je	SHORT $LN2@CRenderCla

; 419  : 
; 420  : 		// if names are matching, return ID
; 421  : 		if (strcmp(sBuffer->name, name) == 0) {

	mov	rax, QWORD PTR [rax+40]
	mov	r8, rbp
	sub	r8, rax
	npad	7
$LL41@CRenderCla:
	movzx	edx, BYTE PTR [rax]
	movzx	ecx, BYTE PTR [rax+r8]
	sub	edx, ecx
	jne	SHORT $LN42@CRenderCla
	inc	rax
	test	ecx, ecx
	jne	SHORT $LL41@CRenderCla
$LN42@CRenderCla:
	test	edx, edx
	je	SHORT $LN36@CRenderCla
$LN2@CRenderCla:

; 409  : 			"CRenderClassGetStaticDataBufferID failed because name was NULL");
; 410  : 	}
; 411  : 
; 412  : 	PCRenderClass cObj = rClass;
; 413  : 
; 414  : 	// loop all static buffers of cObj
; 415  : 	for (UINT32 sbID = 0; sbID < CSM_CLASS_MAX_STATIC_DATA; sbID++) {

	inc	ebx
	add	r9, 8
	cmp	ebx, 32					; 00000020H
	jb	SHORT $LL4@CRenderCla

; 427  : 	_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:??_C@_0EJ@CGGCENIL@CRenderClassGetStaticDataBuffer@
	call	CInternalSetLastError
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN33@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN33@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	QWORD PTR [r14+rax*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 427  : 	_CSyncLeaveErr(FALSE,

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 427  : 	_CSyncLeaveErr(FALSE,

	call	QWORD PTR __imp_LeaveCriticalSection
	xor	eax, eax
$LN43@CRenderCla:

; 428  : 		"CRenderClassGetStaticDataBufferID failed because name could not be found");
; 429  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rdi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
$LN36@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 18   : 	if (_csmint.funcNameStackPtr >= CSMINT_FUNCNAMESTACK_SIZE)

	mov	eax, DWORD PTR _csmint+1224
	cmp	eax, 128				; 00000080H
	jb	SHORT $LN28@CRenderCla
; File C:\Bailey\Programming\Caesium\csmint_error.c

; 9    : 	MessageBoxA(NULL, message, "Caesium Fatal Error", MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0BE@EKMGEMPI@Caesium?5Fatal?5Error@
	lea	rdx, OFFSET FLAT:??_C@_0BL@ELEHMINF@Faulty?5FuncNameStack?5State@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
	mov	eax, DWORD PTR _csmint+1224
$LN28@CRenderCla:
; File C:\Bailey\Programming\Caesium\csmint.c

; 21   : 	_csmint.funcNameStack[_csmint.funcNameStackPtr] = NULL;

	mov	ecx, eax
	mov	QWORD PTR [r14+rcx*8+200], 0
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 422  : 			_CSyncLeave(sbID);

	lea	rcx, OFFSET FLAT:_csmint+32
; File C:\Bailey\Programming\Caesium\csmint.c

; 23   : 	_csmint.funcNameStackPtr--;

	dec	DWORD PTR _csmint+1224
; File C:\Bailey\Programming\Caesium\csm_renderclass.c

; 422  : 			_CSyncLeave(sbID);

	call	QWORD PTR __imp_LeaveCriticalSection
	mov	eax, ebx
	jmp	SHORT $LN43@CRenderCla
CRenderClassGetStaticDataBufferID ENDP
_TEXT	ENDS
END
